rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	
    function validateUsers(data) {
    	return data.size() == 6
      	&& 'uid' in data && data.uid is string
        && 'name' in data && data.name is string
        && 'image' in data && data.image is string
        && 'bgndt' in data && (data.bgndt is timestamp || data.bgndt == null)
        && 'credt' in data && data.credt is timestamp
        && 'upddt' in data && data.upddt is timestamp;
    }
    
    function validateRequests(data) {
    	return data.size() == 4
      	&& 'uid' in data && data.uid is string
        && 'tgt' in data && data.tgt is string
        && 'request' in data && data.request is string
        && 'credt' in data && data.credt is timestamp;
    }
    
    function validateContacts(data) {
    	return data.size() == 6
    	&& 'uid' in data && (data.uid is string || data.uid == null)
    	&& 'name' in data && data.name is string
    	&& 'email' in data && data.email is string
    	&& 'subject' in data && data.subject is int
    	&& 'content' in data && data.content is string
    	&& 'credt' in data && data.credt is timestamp;
    }
    
    function validateReports(data) {
    	return data.size() == 3
      	&& 'uid' in data && data.uid is string
        && 'tgt' in data && data.tgt is string
        && 'credt' in data && data.credt is timestamp;
    }
  
    match /users/{uid} {
    	allow read: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == uid
      	&& validateUsers(request.resource.data) && request.resource.data.uid == uid;
      
      match /logs/{month} {
      	allow read: if request.auth != null;
      }
    }
    
    match /friends/{uid} {
    	allow read: if request.auth != null && request.auth.uid == uid;
    }
    
    match /requests/{requestId} {
    	allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create: if request.auth != null && validateRequests(request.resource.data) && request.resource.data.uid == request.auth.uid
      	&& (request.resource.data.request == 'friend' || request.resource.data.request == 'unfriend'
      		|| request.resource.data.request == 'block' || request.resource.data.request == 'unblock');
      allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }
    
    match /contacts/{contactId} {
    	allow create: if validateContacts(request.resource.data);
    }
    
    match /reports/{reportId} {
    	allow create: if request.auth != null && validateReports(request.resource.data)
      	&& request.resource.data.uid == request.auth.uid
        && reportId == request.resource.data.uid + request.resource.data.tgt;
    }
  }
}